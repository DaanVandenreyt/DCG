---
Resources:
  GeoDBClusterParameterGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Description: "Aurora PostgreSQL 10 Parameter Group"
      Family: aurora-postgresql10
      Parameters:
        rds.force_ssl: 1

  AppSecurityGroupEgressRDSGEO:
    Type: "AWS::EC2::SecurityGroupEgress"
    Properties:
      Description: "permit PostgreSQL (5432) to GeoDBSecurityGroup"
      DestinationSecurityGroupId: !Ref GeoDBSecurityGroup
      FromPort: 5432
      GroupId: !GetAtt AppSecurityGroup.GroupId
      IpProtocol: tcp
      ToPort: 5432

  BastionSecurityGroupEgressRDSGEO:
    Type: "AWS::EC2::SecurityGroupEgress"
    Properties:
      Description: "permit PostgreSQL (5432) to GeoDBSecurityGroup"
      DestinationSecurityGroupId: !Ref GeoDBSecurityGroup
      FromPort: 5432
      GroupId: !GetAtt BastionSecurityGroup.GroupId
      IpProtocol: tcp
      ToPort: 5432

  GeoDBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "RDS GEO Security Group"
      SecurityGroupEgress:
        - Description: "deny all outbound"
          IpProtocol: "-1"
          CidrIp: "127.0.0.1/32"
      SecurityGroupIngress:
        - Description: "permit PostgreSQL (5432) from AppSecurityGroup"
          FromPort: 5432
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AppSecurityGroup.GroupId
          ToPort: 5432
        - Description: "permit PostgreSQL (5432) from BastionSecurityGroup"
          FromPort: 5432
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt BastionSecurityGroup.GroupId
          ToPort: 5432
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", rds-geo]]
      VpcId: !Ref VPC

  {% raw %}
  GeoDBCluster:
    Type: "AWS::RDS::DBCluster"
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      DatabaseName: ${self:custom.infrastructure.${self:provider.stage}.application.geoDatabaseName, self:custom.infrastructure.default.application.geoDatabaseName}
      DBClusterIdentifier: "${self:service}-${self:provider.stage}-geo"
      DBClusterParameterGroupName: !Ref GeoDBClusterParameterGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup
      EnableHttpEndpoint: true
      Engine: aurora-postgresql
      EngineMode: serverless
      EngineVersion: "10.7" # Data API only supports PostgreSQL 10.7 https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html#data-api.regions
      MasterUsername:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref GeoDBSecret,
            ":SecretString:username}}",
          ],
        ]
      MasterUserPassword:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref GeoDBSecret,
            ":SecretString:password}}",
          ],
        ]
      ScalingConfiguration:
        AutoPause: ${self:custom.infrastructure.${self:provider.stage}.geoDatabase.auroraServerlessAutoPause, self:custom.infrastructure.default.geoDatabase.auroraServerlessAutoPause}
        MaxCapacity: ${self:custom.infrastructure.${self:provider.stage}.geoDatabase.auroraServerlessMaxCapacity, self:custom.infrastructure.default.geoDatabase.auroraServerlessMaxCapacity}
        MinCapacity: ${self:custom.infrastructure.${self:provider.stage}.geoDatabase.auroraServerlessMinCapacity, self:custom.infrastructure.default.geoDatabase.auroraServerlessMinCapacity}
        SecondsUntilAutoPause: ${self:custom.infrastructure.${self:provider.stage}.geoDatabase.auroraServerlessSecondsUntilAutoPause, self:custom.infrastructure.default.geoDatabase.auroraServerlessSecondsUntilAutoPause}
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: "${self:service}-${self:provider.stage}-geo"
      UseLatestRestorableTime: true
      VpcSecurityGroupIds:
        - !Ref GeoDBSecurityGroup
  {% endraw %}

Outputs:
  GeoDBClusterAddress:
    Description: RDS Cluster Address
    Value: !GetAtt GeoDBCluster.Endpoint.Address

  GeoDBClusterPort:
    Description: RDS Cluster Port
    Value: !GetAtt GeoDBCluster.Endpoint.Port
